<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>uk.ac.sussex.gdsc</groupId>
  <artifactId>gdsc-test-parent</artifactId>
  <version>1.1.1-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>GDSC Test</name>
  <url>http:///github.com/aherbert/gdsc-test</url>
  <organization>
    <name>Genome Damage and Stability Centre</name>
    <url>http://www.sussex.ac.uk/gdsc/</url>
  </organization>
  <description>Genome Damage and Stability Centre Test Package

The GDSC Test package contains code for use with the JUnit test framework.
</description>

  <licenses>
    <license>
      <name>Apache License version 2.0</name>
      <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>manual</distribution>
    </license>
  </licenses>

  <inceptionYear>2018</inceptionYear>
  <scm>
    <connection>scm:git:http://github.com/aherbert/gdsc-test.git</connection>
    <developerConnection>scm:git:https://github.com/aherbert/gdsc-test.git</developerConnection>
    <url>https://github.com/aherbert/gdsc-test</url>
  </scm>
  <issueManagement>
    <system>GitHub</system>
    <url>https://github.com/aherbert/gdsc-test/issues</url>
  </issueManagement>
  <ciManagement>
    <system>Travis CI</system>
    <url>https://travis-ci.com/aherbert/gdsc-test</url>
  </ciManagement>
  <distributionManagement>
    <snapshotRepository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
    <repository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>
    <site>
      <id>${project.artifactId}-site</id>
      <url>file://${parent.dir}/mvn-repo</url>
    </site>
  </distributionManagement>

  <developers>
    <developer>
      <id>aherbert</id>
      <name>Alex Herbert</name>
      <email>a.herbert@sussex.ac.uk</email>
      <organization>GDSC</organization>
      <organizationUrl>http://www.sussex.ac.uk/gdsc/</organizationUrl>
      <roles>
        <role>developer</role>
      </roles>
    </developer>
  </developers>
  <contributors>
    <contributor>
      <name>Alex Herbert</name>
    </contributor>
  </contributors>

  <properties>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.build.timestamp.format>yyyy/MM/dd HH:mm</maven.build.timestamp.format>
    <build.date>${maven.build.timestamp}</build.date>
    <license.licenseName>apache_v2</license.licenseName>
    <license.copyrightOwners>Alex Herbert</license.copyrightOwners>
    <license.projectName>${project.description}</license.projectName>
    <gdsc.automatic.module.name>uk.ac.sussex.gdsc.test</gdsc.automatic.module.name>
    <!-- Fix -->
    <!-- Workaround to avoid duplicating config files. -->
    <parent.dir>${basedir}</parent.dir>
    <!-- Versions -->
    <gdsc.bc.version>1.0</gdsc.bc.version>
    <checkstyle.version>9.3</checkstyle.version>
    <commons.codec.version>1.18.0</commons.codec.version>
    <commons.rng.version>1.6</commons.rng.version>
    <commons.statistics.version>1.1</commons.statistics.version>
    <revapi.version>0.14.7</revapi.version>
    <revapi.java.version>0.27.0</revapi.java.version>
    <license-maven-plugin.version>2.0.0</license-maven-plugin.version>
    <nexus-staging-maven-plugin.version>1.7.0</nexus-staging-maven-plugin.version>
    <org.jacoco.version>0.8.7</org.jacoco.version>
    <org.junit.bom.version>5.9.1</org.junit.bom.version>
    <pmd.version>7.13.0</pmd.version>
    <spotbugs.version>4.7.2.0</spotbugs.version>
    <!-- Maven plugins -->
    <build-helper-maven-plugin.version>3.6.0</build-helper-maven-plugin.version>
    <exec-maven-plugin.version>3.0.0</exec-maven-plugin.version>
    <formatter-maven-plugin.version>2.26.0</formatter-maven-plugin.version>
    <maven-changes-plugin.version>2.12.1</maven-changes-plugin.version>
    <maven-checkstyle-plugin.version>3.6.0</maven-checkstyle-plugin.version>
    <maven-clean-plugin.version>3.4.1</maven-clean-plugin.version>
    <maven-compiler-plugin.version>3.14.0</maven-compiler-plugin.version>
    <maven-deploy-plugin.version>3.0.0-M1</maven-deploy-plugin.version>
    <maven-enforcer-plugin.version>3.0.0-M3</maven-enforcer-plugin.version>
    <maven-gpg-plugin.version>3.2.7</maven-gpg-plugin.version>
    <maven-install-plugin.version>3.0.0-M1</maven-install-plugin.version>
    <maven-jar-plugin.version>3.4.2</maven-jar-plugin.version>
    <maven-javadoc-plugin.version>3.3.2</maven-javadoc-plugin.version>
    <maven-jxr-plugin.version>3.6.0</maven-jxr-plugin.version>
    <maven-pmd-plugin.version>3.26.0</maven-pmd-plugin.version>
    <maven-project-info-reports-plugin.version>3.9.0</maven-project-info-reports-plugin.version>
    <maven-release-plugin.version>3.1.1</maven-release-plugin.version>
    <maven-resources-plugin.version>3.2.0</maven-resources-plugin.version>
    <maven-shade-plugin.version>3.6.0</maven-shade-plugin.version>
    <maven-site-plugin.version>3.21.0</maven-site-plugin.version>
    <maven-source-plugin.version>3.2.1</maven-source-plugin.version>
    <maven-surefire-plugin.version>3.5.3</maven-surefire-plugin.version>
    <!-- JaCoCo Checks -->
    <org.jacoco.class.covered>0.96</org.jacoco.class.covered>
    <org.jacoco.instruction.covered>0.8</org.jacoco.instruction.covered>
    <org.jacoco.method.covered>0.8</org.jacoco.method.covered>
    <org.jacoco.branch.covered>0.8</org.jacoco.branch.covered>
    <org.jacoco.line.covered>0.85</org.jacoco.line.covered>
    <org.jacoco.complexity.covered>0.8</org.jacoco.complexity.covered>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>${org.junit.bom.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-rng-bom</artifactId>
        <version>${commons.rng.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-statistics-bom</artifactId>
        <version>${commons.statistics.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>commons-codec</groupId>
        <artifactId>commons-codec</artifactId>
        <version>${commons.codec.version}</version>
       </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <defaultGoal>clean install</defaultGoal>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>${maven-clean-plugin.version}</version>
          <configuration>
            <filesets>
              <fileset>
                <directory>docs/_build</directory>
              </fileset>
            </filesets>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>${maven-install-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${maven-resources-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven-surefire-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>${maven-site-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>${maven-project-info-reports-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>${maven-javadoc-plugin.version}</version>
          <configuration>
            <source>${maven.compiler.source}</source>
            <detectJavaApiLink>false</detectJavaApiLink>
            <encoding>UTF-8</encoding>
            <docencoding>UTF-8</docencoding>
            <linksource>true</linksource>
            <notimestamp>true</notimestamp>
            <links>
              <link>http://docs.oracle.com/javase/8/docs/api/</link>
              <link>http://docs.oracle.com/javase/7/docs/api/</link>
              <link>http://docs.oracle.com/javaee/6/api/</link>
            </links>
            <archive>
              <manifest>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
              </manifest>
            </archive>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>${maven-checkstyle-plugin.version}</version>
          <dependencies>
            <dependency>
              <groupId>com.puppycrawl.tools</groupId>
              <artifactId>checkstyle</artifactId>
              <version>${checkstyle.version}</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <artifactId>maven-pmd-plugin</artifactId>
          <version>${maven-pmd-plugin.version}</version>
          <dependencies>
            <dependency>
              <groupId>net.sourceforge.pmd</groupId>
              <artifactId>pmd-core</artifactId>
              <version>${pmd.version}</version>
            </dependency>
            <dependency>
              <groupId>net.sourceforge.pmd</groupId>
              <artifactId>pmd-java</artifactId>
              <version>${pmd.version}</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>${exec-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>${build-helper-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-shade-plugin</artifactId>
          <version>${maven-shade-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>${maven-deploy-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.sonatype.plugins</groupId>
          <artifactId>nexus-staging-maven-plugin</artifactId>
          <version>${nexus-staging-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${maven-jar-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>net.revelc.code.formatter</groupId>
          <artifactId>formatter-maven-plugin</artifactId>
          <version>${formatter-maven-plugin.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <inherited>true</inherited>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>${maven-enforcer-plugin.version}</version>
        <configuration>
          <rules>
            <requireMavenVersion>
              <version>3.5.4</version>
            </requireMavenVersion>
            <requireJavaVersion>
              <version>${maven.compiler.target}</version>
            </requireJavaVersion>
          </rules>
          <fail>true</fail>
        </configuration>
        <executions>
          <execution>
            <id>enforce-maven-3</id>
            <goals>
              <goal>enforce</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-source-plugin</artifactId>
        <version>${maven-source-plugin.version}</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <phase>verify</phase>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <systemPropertyVariables>
            <!-- Set JUL Formatting -->
            <java.util.logging.SimpleFormatter.format><![CDATA[%4$-7s %2$s %5$s%6$s%n]]></java.util.logging.SimpleFormatter.format>
          </systemPropertyVariables>
          <!-- Fix for OpenJDK 8 now validating class-path attributes in Jar manifests. See https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=912333#63 -->
          <useSystemClassLoader>false</useSystemClassLoader>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-javadoc-plugin</artifactId>
        <configuration>
          <failOnError>true</failOnError>
          <failOnWarnings>true</failOnWarnings>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <version>${license-maven-plugin.version}</version>
        <configuration>
          <addJavaLicenseAfterPackage>false</addJavaLicenseAfterPackage>
          <canUpdateDescription>true</canUpdateDescription>
          <canUpdateCopyright>true</canUpdateCopyright>
        </configuration>
      </plugin>
      <plugin>
        <groupId>net.revelc.code.formatter</groupId>
        <artifactId>formatter-maven-plugin</artifactId>
        <configuration>
          <!-- Resource on the classpath. -->
          <configFile>eclipse/eclipse-code-format.xml</configFile>
          <overrideConfigCompilerVersion>true</overrideConfigCompilerVersion>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <configuration>
          <configLocation>${parent.dir}/src/conf/checkstyle/checkstyle.xml</configLocation>
          <suppressionsLocation>${parent.dir}/src/conf/checkstyle/checkstyle-suppressions.xml</suppressionsLocation>
          <consoleOutput>true</consoleOutput>
          <failsOnError>true</failsOnError>
          <linkXRef>true</linkXRef>
          <includeTestSourceDirectory>true</includeTestSourceDirectory>
        </configuration>
        <executions>
          <execution>
            <id>verify</id>
            <phase>verify</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-pmd-plugin</artifactId>
        <configuration>
          <targetJdk>${maven.compiler.target}</targetJdk>
          <skipEmptyReport>false</skipEmptyReport>
          <analysisCache>true</analysisCache>
          <rulesets>
            <ruleset>${parent.dir}/src/conf/pmd/pmd-ruleset.xml</ruleset>
          </rulesets>
          <failOnViolation>false</failOnViolation>
          <printFailingErrors>false</printFailingErrors>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
        <version>${spotbugs.version}</version>
        <configuration>
          <failOnError>false</failOnError>
          <threshold>Normal</threshold>
          <effort>Default</effort>
          <excludeFilterFile>${parent.dir}/src/conf/spotbugs/spotbugs-exclude-filter.xml</excludeFilterFile>
        </configuration>
      </plugin>
      <!-- use of mvn release:prepeare release perform should use the nexus release profile -->
      <plugin>
        <artifactId>maven-release-plugin</artifactId>
        <version>${maven-release-plugin.version}</version>
        <configuration>
          <autoVersionSubmodules>true</autoVersionSubmodules>
          <useReleaseProfile>false</useReleaseProfile>
          <releaseProfiles>release</releaseProfiles>
          <goals>deploy</goals>
          <!-- <goals>deploy nexus-staging:release</goals> -->
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifestEntries>
              <!-- Java 9 -->
              <Automatic-Module-Name>${gdsc.automatic.module.name}</Automatic-Module-Name>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.revapi</groupId>
        <artifactId>revapi-maven-plugin</artifactId>
        <version>${revapi.version}</version>
        <dependencies>
          <dependency>
            <groupId>org.revapi</groupId>
            <artifactId>revapi-java</artifactId>
            <version>${revapi.java.version}</version>
          </dependency>
        </dependencies>
        <configuration>
          <analysisConfiguration>
            <revapi.differences id="intentional-api-changes">
              <ignore>true</ignore>
            </revapi.differences>
          </analysisConfiguration>
          <analysisConfigurationFiles>
            <configurationFile>
              <path>${parent.dir}/src/conf/revapi/api-changes.json</path>
              <roots>
                <!-- Path to configuration in the JSON config file -->
                <root>1.1</root>
              </roots>
            </configurationFile>
          </analysisConfigurationFiles>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${org.jacoco.version}</version>
        <reportSets>
          <reportSet>
            <reports>
              <!-- select non-aggregate reports -->
              <report>report</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <artifactId>maven-changes-plugin</artifactId>
        <version>${maven-changes-plugin.version}</version>
        <configuration>
          <runOnlyAtExecutionRoot>true</runOnlyAtExecutionRoot>
        </configuration>
        <reportSets>
          <reportSet>
            <reports>
              <report>github-report</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>${maven-checkstyle-plugin.version}</version>
        <configuration>
          <configLocation>${parent.dir}/src/conf/checkstyle/checkstyle.xml</configLocation>
          <suppressionsLocation>${parent.dir}/src/conf/checkstyle/checkstyle-suppressions.xml</suppressionsLocation>
          <linkXRef>true</linkXRef>
          <enableRulesSummary>false</enableRulesSummary>
          <includeResources>false</includeResources>
        </configuration>
        <reportSets>
          <reportSet>
            <reports>
              <report>checkstyle</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>${maven-pmd-plugin.version}</version>
        <configuration>
          <targetJdk>${maven.compiler.target}</targetJdk>
          <skipEmptyReport>false</skipEmptyReport>
          <analysisCache>true</analysisCache>
          <rulesets>
            <ruleset>${parent.dir}/src/conf/pmd/pmd-ruleset.xml</ruleset>
          </rulesets>
        </configuration>
        <reportSets>
          <reportSet>
            <reports>
              <report>pmd</report>
              <report>cpd</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
        <version>${spotbugs.version}</version>
        <configuration>
          <threshold>Normal</threshold>
          <effort>Default</effort>
          <excludeFilterFile>${parent.dir}/src/conf/spotbugs/spotbugs-exclude-filter.xml</excludeFilterFile>
        </configuration>
        <reportSets>
          <reportSet>
            <reports>
              <report>spotbugs</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <!-- NOTE: javadoc config must also be set under <build> -->
        <artifactId>maven-javadoc-plugin</artifactId>
        <configuration>
          <encoding>UTF-8</encoding>
          <docencoding>UTF-8</docencoding>
          <notimestamp>true</notimestamp>
          <archive>
            <manifest>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
            </manifest>
          </archive>
        </configuration>
        <reportSets>
          <reportSet>
            <id>default</id>
            <reports>
              <report>javadoc</report>
              <report>aggregate</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <artifactId>maven-jxr-plugin</artifactId>
        <version>${maven-jxr-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.revapi</groupId>
        <artifactId>revapi-maven-plugin</artifactId>
        <version>${revapi.version}</version>
        <configuration>
          <!-- For reporting do not ignore the "intentional-api-changes" so they are included -->
          <analysisConfigurationFiles>
            <configurationFile>
              <path>${parent.dir}/src/conf/revapi/api-changes.json</path>
              <roots>
                <!-- Path(s) to configuration in the JSON config file -->
                <root>1.1</root>
              </roots>
            </configurationFile>
          </analysisConfigurationFiles>
          <!-- Note: Property 'reportSeverity' is deprecated but newer 'reportCriticality'
               does work as documented. -->
          <reportSeverity>equivalent</reportSeverity>
          <reportCriticality>allowed</reportCriticality>
        </configuration>
        <reportSets>
          <reportSet>
            <reports>
              <report>report</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
    </plugins>
  </reporting>

  <profiles>
    <profile>
      <id>snapshot-release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <executions>
              <execution>
                <!-- Fail if not a SNAPSHOT -->
                <id>is-snapshot</id>
                <phase>validate</phase>
                <goals>
                  <goal>regex-property</goal>
                </goals>
                <configuration>
                  <name>is.snapshot.version</name>
                  <value>${project.version}</value>
                  <regex>^.*-SNAPSHOT$</regex>
                  <failIfNoMatch>true</failIfNoMatch>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>nexus-staging-maven-plugin</artifactId>
            <extensions>true</extensions>
            <configuration>
              <serverId>ossrh</serverId>
              <nexusUrl>https://oss.sonatype.org/</nexusUrl>
              <autoReleaseAfterClose>true</autoReleaseAfterClose>
              <!-- Not required for snapshot -->
              <skipStaging>true</skipStaging>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>release</id>
      <!-- All settings for signing and ossrh should be in settings.xml -->
      <properties>
        <gpg.executable>gpg</gpg.executable>
        <gpg.keyname>${env.GPG_KEYNAME}</gpg.keyname>
      </properties>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>${maven-gpg-plugin.version}</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>nexus-staging-maven-plugin</artifactId>
            <extensions>true</extensions>
            <configuration>
              <serverId>ossrh</serverId>
              <nexusUrl>https://oss.sonatype.org/</nexusUrl>
              <!-- The staged repo must be inspected and then released -->
              <autoReleaseAfterClose>false</autoReleaseAfterClose>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>eclipse</id>
      <dependencies>
        <dependency>
          <groupId>org.junit.jupiter</groupId>
          <artifactId>junit-jupiter-engine</artifactId>
        </dependency>
        <dependency>
          <groupId>org.junit.platform</groupId>
          <artifactId>junit-platform-launcher</artifactId>
        </dependency>
      </dependencies>
    </profile>
    <!-- Selectively build the entire project documentation -->
    <profile>
      <id>gdsc-test-doc</id>
      <modules>
        <module>gdsc-test-doc</module>
      </modules>
    </profile>
    <!-- Selectively run the project examples -->
    <profile>
      <id>gdsc-test-examples</id>
      <modules>
        <module>gdsc-test-examples</module>
      </modules>
    </profile>
    <profile>
      <id>jacoco</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${org.jacoco.version}</version>
            <executions>
              <execution>
                <id>default-prepare-agent</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
              </execution>
              <execution>
                <id>default-report</id>
                <goals>
                  <goal>report</goal>
                </goals>
              </execution>
              <execution>
                <id>default-check</id>
                <goals>
                  <goal>check</goal>
                </goals>
                <configuration>
                  <rules>
                    <rule>
                      <element>BUNDLE</element>
                      <limits>
                        <limit>
                          <counter>CLASS</counter>
                          <value>COVEREDRATIO</value>
                          <minimum>${org.jacoco.class.covered}</minimum>
                        </limit>
                        <limit>
                          <counter>INSTRUCTION</counter>
                          <value>COVEREDRATIO</value>
                          <minimum>${org.jacoco.instruction.covered}</minimum>
                        </limit>
                        <limit>
                          <counter>METHOD</counter>
                          <value>COVEREDRATIO</value>
                          <minimum>${org.jacoco.method.covered}</minimum>
                        </limit>
                        <limit>
                          <counter>BRANCH</counter>
                          <value>COVEREDRATIO</value>
                          <minimum>${org.jacoco.branch.covered}</minimum>
                        </limit>
                        <limit>
                          <counter>LINE</counter>
                          <value>COVEREDRATIO</value>
                          <minimum>${org.jacoco.line.covered}</minimum>
                        </limit>
                        <limit>
                          <counter>COMPLEXITY</counter>
                          <value>COVEREDRATIO</value>
                          <minimum>${org.jacoco.complexity.covered}</minimum>
                        </limit>
                      </limits>
                    </rule>
                  </rules>
                  <haltOnFailure>true</haltOnFailure>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>fast</id>
      <properties>
        <skipTests>true</skipTests>
        <maven.javadoc.skip>true</maven.javadoc.skip>
      </properties>
    </profile>
  </profiles>

  <modules>
    <module>gdsc-test-build-tools</module>
    <module>gdsc-test-generator</module>
    <module>gdsc-test-api</module>
    <module>gdsc-test-utils</module>
    <module>gdsc-test-junit5</module>
    <module>gdsc-test-rng</module>
    <!-- These are not deployed but cannot skip the nexus staging plugin as they are -->
    <!-- the last modules in the build order. So selectively run them. -->
    <!-- See: https://issues.sonatype.org/browse/NEXUS-9138 -->
    <!-- <module>gdsc-test-doc</module> uses profile gdsc-test-doc -->
    <!-- <module>gdsc-test-examples</module> uses profile gdsc-test-examples -->
  </modules>

</project>
